title: restart-kubernetes webapp for my-webapp
description: Can my-webapp survive a restart-kubernetes webapp experiment?
configuration:
  webapp_service_url:
    type: env
    key: webapp.com
steady-state-hypothesis:
  title: webapp steady state
  probes:
  - type: probe
    name: all-services-are-healthy
    tolerance: true
    provider:
      type: python
      module: chaosk8s.probes
      func: all_microservices_healthy
  - type: probe
    name: webapp-is-available
    tolerance: true
    provider:
      type: python
      module: chaosk8s.probes
      func: microservice_available_and_healthy
      arguments:
        name: webapp-app
method:
- type: action
  name: talk-to-webapp
  background: true
  provider:
    type: process
    path: vegeta
    timeout: 63
    arguments:
      attack: ''
      -duration: 60s
      -connections: '1'
      -rate: '1'
      -output: report.bin
      -targets: urls.txt
- type: action
  name: confirm-purchase
  provider:
    type: http
    url: ${webapp_service_url}/purchase/confirm
  pauses:
    before: 15
- type: probe
  name: collect-how-many-times-our-service-container-restarted-in-the-last-minute
  provider:
    type: python
    module: chaosprometheus.probes
    func: query_interval
    arguments:
      query: kube_pod_container_status_restarts{container="webapp-app"}
      start: 2 minutes ago
      end: now
  pauses:
    before: 45
- type: probe
  name: read-webapp-logs-for-the-pod-that-was-killed
  provider:
    type: python
    module: chaosk8s.probes
    func: read_microservices_logs
    arguments:
      name: webapp-app
      from_previous: true
- type: probe
  name: read-webapp-logs-for-pod-that-was-started
  provider:
    type: python
    module: chaosk8s.probes
    func: read_microservices_logs
    arguments:
      name: webapp-app
- type: probe
  name: collect-status-code-from-our-webapp-in-the-last-2-minutes
  provider:
    type: python
    module: chaosprometheus.probes
    func: query_interval
    arguments:
      query: flask_http_request_duration_seconds_count{path="/"}
      start: 2 minutes ago
      end: now
  pauses:
    before: 10
- type: probe
  name: plot-request-latency-throughout-experiment
  provider:
    type: process
    path: vegeta
    timeout: 5
    arguments:
      report: ''
      -inputs: report.bin
      -reporter: plot
      -output: latency.html
  pauses:
    before: 5
rollbacks: []
